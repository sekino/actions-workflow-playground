name: adhoc terraform execute

on:
  issue_comment:
    types: [ created ]
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  create-tf-execute-context:
    runs-on: ubuntu-22.04
    env:
      LABELS: ${{ toJson(github.event.issue.labels) }}
    steps:
      - name: Create context from labels
        id: from-labels
        run: |
          target_labels=$(echo ${LABELS} | jq '.[].name' | jq 'select(. | startswith("target:"))' | jq -c -s '.')
          targets=$(echo ${target_labels} | sed 's/target://g')
          env_labels=$(echo ${LABELS} | jq '.[].name' | jq 'select(. | startswith("env:"))' | jq -c -s '.')
          envs=$(echo ${env_labels} | sed 's/env://g')
          env_num=$(echo ${envs} | jq '. | length')
          if [[ ${env_num} == 0 ]]; then
            echo "env label is not set" >&2
            exit 1
          fi
          if [[ ${env_num} != 1 ]]; then
            echo "two or more env labels are set" >&2
            exit 1
          fi
          env=$(echo ${envs} | jq -cr '.[]')
          destroy=$(echo ${LABELS} | jq '.[].name' | jq 'select(.=="destroy")' | jq -cr '.')
          
          echo "targets: ${targets}"
          echo "env: ${env}"
          echo "destroy: ${destroy}"
          
          echo "targets=${targets}" >> $GITHUB_OUTPUT
          echo "env=${env}" >> $GITHUB_OUTPUT
          echo "destroy=${destroy}" >> $GITHUB_OUTPUT

  call-plan:
    if: ${{ github.event.issue.pull_request }} && ${{ github.event.comment.body == 'plan' }}
    steps:
      - name: Call plan workflow
        run: echo "Call plan workflow"

  call-apply:
    if: github.event.pull_request.merged == true
    steps:
      - name: Call plan workflow
        run: echo "Call apply workflow"